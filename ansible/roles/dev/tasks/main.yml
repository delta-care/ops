---
- name: Create dev namespace
  become: yes
  become_user: ubuntu
  command: "kubectl create ns dev"

- name: Inject istio on dev namespace
  become: yes
  become_user: ubuntu
  command: "kubectl label namespace dev istio-injection=enabled"

- name: Create the configmap
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: deltacare
        namespace: dev
      data:
        VUE_APP_EMPRESAS_API: "http://dev.deltacare.xyz/api/v1/empresas"
        VUE_APP_KEYCLOAK_AUTH_URL: "http://sso.deltacare.xyz/auth"
        VUE_APP_KEYCLOAK_REALM: "Deltacare"
        VUE_APP_KEYCLOAK_CLIENT_ID: "deltacare"
        VUE_APP_KEYCLOAK_MINVALIDITY: "70"
      EOF

- name: Create istio gateway for dev namespace 
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: Gateway
      metadata:
        name: gateway
        namespace: dev
      spec:
        servers:
          - hosts:
              - dev.deltacare.xyz
            port:
              name: http
              number: 80
              protocol: HTTP
      EOF
- name: Create virtual service for dev namespace
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: vs
        namespace: dev 
      spec:
        hosts:
          - dev.deltacare.xyz
        gateways:
          - gateway
        http:
          - match:
              - uri:
                  exact: /api/v1/empresas
              - uri:
                  exact: /api/v1/empresas/
              - uri:
                  regex: '/api/v1/empresas/[0-9]+'
            name: api-empresa
            route:
              - destination:
                  host: api-empresa
                  port:
                    number: 8080
          - match:
              - uri:
                  prefix: /api/v1/empresas/
            name: api-empresa-swagger
            rewrite:
              uri: /
            route:
              - destination:
                  host: api-empresa
                  port:
                    number: 8080
          - match:
              - uri:
                  prefix: /
            name: web
            route:
              - destination:
                  host: web-src
                  port:
                    number: 80
      EOF

- name: Create request authentication via jwt for dev namespace
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: "security.istio.io/v1beta1"
      kind: RequestAuthentication
      metadata:
        name: ra
        namespace: dev
      spec:
        selector:
          matchLabels:
            app: api-empresa
        jwtRules:
        - issuer: http://sso.deltacare.xyz/auth/realms/Deltacare
          jwksUri: http://sso.deltacare.xyz/auth/realms/Deltacare/protocol/openid-connect/certs
      EOF
- name: Create authorization policy for api-empresa
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: "security.istio.io/v1beta1"
      kind: AuthorizationPolicy
      metadata:
        name: api-empresa
        namespace: dev
      spec:
        selector:
          matchLabels:
            app: api-empresa
        action: ALLOW
        rules:
        - from:
          when:
          - key: request.auth.audiences
            values: 
              - account
          - key: request.auth.presenter
            values: 
              - deltacare
      EOF

- name: Create authorization policy for web
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: "security.istio.io/v1beta1"
      kind: AuthorizationPolicy
      metadata:
        name: web
        namespace: dev
      spec:
        selector:
          matchLabels:
            app: web-src
        rules:
          - to:
              - operation:
                  methods:
                    - GET
                  paths:
                    - /
                    - /css/*
                    - /js/*
                    - /img/*
                    - /home
                    - /painel
                    - /empresa
        action: ALLOW
      EOF