---
- name: Download istioctl
  get_url:
    url: https://istio.io/downloadIstioctl
    dest: /home/ubuntu

- name: Install istioctl
  become: yes
  become_user: ubuntu
  command: "sh downloadIstioCtl.sh"

- name: Add istioctl to the path via .bashrc
  lineinfile: dest=/home/ubuntu/.bashrc line='export PATH=$PATH:$HOME/.istioctl/bin' insertafter='EOF' regexp='export PATH=\$PATH:$HOME/.istioctl/bin' state=present

- name: Install istio
  become: yes
  become_user: ubuntu
  command: "/home/ubuntu/.istioctl/bin/istioctl install --set profile=demo -y"

- name: Verify istio install 
  become: yes
  become_user: ubuntu
  command: "/home/ubuntu/.istioctl/bin/istioctl verify-install"

- name: Install grafana addon 
  become: yes
  become_user: ubuntu
  command: "kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.8/samples/addons/grafana.yaml"
  
- name: Install jaeger addon 
  become: yes
  become_user: ubuntu
  command: "kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.8/samples/addons/jaeger.yaml"

- name: Install prometheus addon 
  become: yes
  become_user: ubuntu
  command: "kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.8/samples/addons/prometheus.yaml"

- name: Install kiali addon 
  become: yes
  become_user: ubuntu
  command: "kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.8/samples/addons/kiali.yaml"
- name: Create istio gateway for istio-system namespace 
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: Gateway
      metadata:
        name: gateway
        namespace: istio-system
      spec:
        servers:
          - hosts:
              - kiali.ops.deltacare.xyz
              - grafana.ops.deltacare.xyz
              - prometheus.ops.deltacare.xyz
              - jaeger.ops.deltacare.xyz
            port:
              name: http
              number: 80
              protocol: HTTP
      EOF

- name: Create virtual service for kiali service
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: kiali-vs
        namespace: istio-system 
      spec:
        gateways:
          - gateway
        hosts:
          - kiali.ops.deltacare.xyz
        http:
          - match:
              - port: 80
            route:
              - destination:
                  host: kiali
                  port:
                    number: 20001
      EOF

- name: Create virtual service for prometheus service
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: grafana-vs
        namespace: istio-system 
      spec:
        gateways:
          - gateway
        hosts:
          - grafana.ops.deltacare.xyz
        http:
          - match:
              - port: 80
            route:
              - destination:
                  host: grafana
                  port:
                    number: 3000
      EOF

- name: Create virtual service for prometheus service
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: prometheus-vs
        namespace: istio-system 
      spec:
        gateways:
          - gateway
        hosts:
          - prometheus.ops.deltacare.xyz
        http:
          - match:
              - port: 80
            route:
              - destination:
                  host: prometheus
                  port:
                    number: 9090
      EOF

- name: Create virtual service for jaeger service
  become: yes
  become_user: ubuntu
  shell: 
    cmd: | 
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: jaeger-vs
        namespace: istio-system 
      spec:
        gateways:
          - gateway
        hosts:
          - jaeger.ops.deltacare.xyz
        http:
          - match:
              - port: 80
            route:
              - destination:
                  host: tracing
                  port:
                    number: 80
      EOF